def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {

    compileSdkVersion 30

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.check_netly_java_code"
        minSdkVersion 15
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true

    ndk {
        abiFilters "armeabi", "x86", "armeabi-v7a", "arm64-v8a", "x86_64"
    }
    }

    dexOptions {
        preDexLibraries false
        javaMaxHeapSize "4g"
    }

    buildTypes {
        release {
            
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug

    ndk {
        abiFilters "armeabi", "x86", "armeabi-v7a", "arm64-v8a", "x86_64"
    }
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    //JNI Lib Declaration
    sourceSets.main {
        jniLibs.srcDirs 'src/main/jniLibs'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:30.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation files('libs/mantra.mfs100.jar')
}
